{"version":3,"file":"static/webpack/static/development/pages/app.js.7e4c228be94e3def8463.hot-update.js","sources":["webpack:///./pages/app.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../components/Layout';\nimport PageWrapper from '../components/PageWrapper';\nimport Config from '../config';\nimport fetch from 'isomorphic-unfetch';\nimport GoogleMapReact from 'google-map-react';\nimport FlightInfo from '../components/FlightInfo';\nimport Flight from '../components/Flight';\n\n\n/**\n * Converts a flight info array in a semantic readable Object\n * @param {*} arr \n * @param {*} time \n * @returns {*} flight\n */\nfunction flightArrayToObject(arr, time){\n  // let altitudeHistory = getAltitudeHistoryObject(arr, time);\n  const flight = {\n    icao24: arr[0],\n    callsign: arr[1],\n    lat: arr[6],\n    lng: arr[5],\n    barAlt: arr[7],\n    geoAlt: arr[13],\n    // altitudeHistory: [altitudeHistory],\n    time\n  }\n  return flight;\n}\n\n\nvar flightPollInterval;\n\nclass App extends Component {\n\n  state = {\n    flightList : [],\n    openFlight: false,\n    center: { lat: 52.52000659999999, lng: 13.404954 },\n    zoom: 11,\n    bounds: {\n      northeast: {lat: 52.6754542, lng: 13.7611175},\n      southwest: {lat: 52.338234, lng: 13.088346}\n    },\n\n  }\n\n\n\n  async getPositionData(){\n      // get the userlocation based of the url slug .../<location> (defaults to berlin for demo reasons) \n      const locationRequest = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?&key=AIzaSyDUGpUnqLVJtzfGuH_ZqbN9eLLgA5wMEis&address=${this.props.locationSlug}`)\n      const locationResponse = await locationRequest.json()\n      const locationData = locationResponse .results[0];\n      return locationData\n  }\n\n\n\n  async updateFlightList(){\n    // get all ðŸš€ based on the location bounds\n    let bounds = this.state.bounds;\n    const flightAreaListRequest = await fetch(`${Config.apiUrl}/states/all?lamin=${bounds.southwest.lat}&lomin=${bounds.southwest.lng}&lamax=${bounds.northeast.lat}&lomax=${bounds.northeast.lng}`);\n    const flightAreaListResponse = await flightAreaListRequest.json();\n    // console.log(flightAreaListResponse)\n    if(!flightAreaListResponse.states) {\n      return\n    }\n    const flightAreaList = flightAreaListResponse.states.map(flight => flightArrayToObject(flight, flightAreaListResponse.time));\n    // create the apiUrl to poll for ðŸš€-Track data\n    flightAreaList.forEach((flight, i)=>{\n      // api not sending a cors header? - no problem ðŸ˜Ž\n      flightAreaList[i].trackUrl = `https://xcors.felixkoppe.com/https://opensky-network.org/api/tracks/?icao24=${flight.icao24}`\n    });\n    // set location of opened flight to center map (ðŸš€ follow feature)\n    let i = flightAreaList.findIndex(flight => flight.icao24 === this.state.openFlight)\n\n    if(flightAreaList[i]){\n      // console.log(\"following plane\")\n      // this.setState({\n      //   center: {\n      //     lat: flightAreaList[i].lat,\n      //     lng: flightAreaList[i].lng\n      //   }\n      // })\n    }\n    this.setState({\n      flightList: flightAreaList\n    });\n  }\n\n\n  static async getInitialProps(context) {\n    const locationSlug = context.query.slug;\n    return {  locationSlug};\n  }\n\n\n\n  componentDidMount(){\n    this.flightPollInterval = setInterval(this.updateFlightList.bind(this), 1000)\n  }\n\n  \n  \n  componentWillUnmount(){\n    clearInterval(this.flightPollInterval)\n  }\n\n  _onBoundsChange = (center, zoom, bounds, marginBounds) => {\n    let newBounds = {\n      northeast: {lat:bounds[6], lng:bounds[7]},\n      southwest: {lat:bounds[4], lng:bounds[5]}\n    }\n    this.setState({\n      bounds: newBounds\n    })\n  }\n\n\n  _onChildClick = (key, childProps) => {\n    //sets current open info window\n    this.setState({\n      center: {\n        lat: childProps.flight.lat,\n        lng: childProps.flight.lng\n      },\n      openFlight: childProps.flight.icao24\n    })\n  }\n\n\n\n  render() {\n    // map flights to Map Marker DOM\n    const flights = this.state.flightList.map(flight=>{\n      if(flight) {\n        return (\n            <Flight \n              style={{height: 100, width: 100 }}\n              open={this.state.openFlight == flight.icao24}\n              key={flight.icao24}\n              lat={flight.lat}\n              lng={flight.lng}\n              flight={flight} \n              >\n                <svg style={{zIndex: 1}} version=\"1\" width=\"48\" height=\"48\" className=\"plane-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400.156 400.155\">\n                    <path  d=\"M396 50c6-19 5-33-3-43-10-8-24-9-42-3-19 6-35 16-49 31l-46 45L66 35c-3-1-6 0-9 2L21 74c-2 2-3 4-3 8 1 3 2 5 5 6l145 80-74 74-55-15h-2c-3 0-5 0-7 2L3 257c-2 2-3 4-3 7s2 5 4 7l72 53 54 72c1 3 4 4 6 4h1l7-2 27-28c3-3 3-5 2-9l-15-55 74-74 80 145c1 2 3 4 6 5h2l5-2 37-27c3-3 4-6 3-10l-45-198 45-46c15-15 25-31 31-49z\"/>\n                </svg>\n            </Flight>\n        )\n      }\n    })\n\n    return (\n      <Layout>\n        <div style={{ height: '100vh', width: '100%' }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: 'AIzaSyDUGpUnqLVJtzfGuH_ZqbN9eLLgA5wMEis' }}\n            center={{\n              lat: this.state.center.lat,\n              lng: this.state.center.lng\n            }}\n            defaultZoom={this.state.zoom}\n            options={{\n              styles: Config.mapStyles,\n              disableDefaultUI: true,\n              clickableIcons: false \n            }}\n            hoverDistance={50}\n            onBoundsChange={this._onBoundsChange}\n            onChildClick={this._onChildClick.bind(this)}\n          >\n            {flights}\n          </GoogleMapReact>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default PageWrapper(App);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AALA;AACA;AAyEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AACA;AAGA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AACA;;;;;;;;;;;;;;;;AA/EA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;;;;;;;;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;AAYA;AACA;AACA;;;AAIA;AACA;AACA;;;AA0BA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAdA;AAqBA;;;;;;AAtFA;;;;;;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AA9DA;AACA;AAmJA;;;;A","sourceRoot":""}